[{"content":"\u003cp\u003eData visualization can be defined as the use of graphical or pictorial\nrepresentations to present data in a way that makes it easier to\nunderstand, analyze, and communicate. It involves the use of visual\nelements such as charts, graphs, and maps to help users better\nunderstand and interpret complex data sets. Data visualization is an\nimportant tool for exploratory data analysis, as well as for\ncommunicating results to others. By presenting data in a visual format,\ndata visualization can also help to reveal new connections and insights\nthat might not be apparent from a purely numerical or textual analysis.\nEffective data visualization allows viewers to quickly identify\npatterns, trends, and relationships within the data, and can be used to\nhighlight key insights or communicate complex ideas. In this project, I\nwill explain the details that need to be considered when plotting with\nbase R \u003ccode\u003egraphics\u003c/code\u003e.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eIn base R, there are many functions that can be used to create different\ntypes of plots.Although there is no clear distinction between high-level\nand low-level functions, I like to divide functions as such. I believe\nthat there are some functions which can be called as high-level plotting\nfunctions tend to provide a convenient way to create a specific type of\nplot with a relatively small amount of code. On the other hand, there\nare some functions which can be called as low-level plotting functions\nprovide more control and flexibility, but require more coding to create\na plot. At this point, it needs to be noted that the package \u003ccode\u003eggplot2\u003c/code\u003e,\nwhich will be explained later in another project, is built around the\nconcept of \u0026ldquo;grammar of graphics\u0026rdquo;, which means that it provides a set of\nrules for building plots by combining basic building blocks or\ncomponents. It is possible to think low-level functions as components in\nthe \u003ccode\u003eggplot2\u003c/code\u003e package.\u003c/p\u003e\n\u003cp\u003eThere are five high-level plotting functions in the base R. There\nfunctions can be listed as follows:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/barplot\"\u003ebarplot()\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/pie\"\u003epie()\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/hist\"\u003ehist()\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/boxplot\"\u003eboxplot()\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/plot\"\u003eplot()\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThere are seven low-level plotting functions in the base R. There\nfunctions can be listed as follows:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/text\"\u003etext()\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/points\"\u003epoints()\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/lines\"\u003elines()\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/legend\"\u003elegend()\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/abline\"\u003eabline()\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/arrows\"\u003earrows()\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/symbols\"\u003esymbols()\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eI think there is one thing that should be mentioned at this point.\nHigh-level plotting functions can create a plot by themselves, while\nlow-level plotting functions must have a high-level function in order to\nwork. While showing each high-level function, I tried to explain the\nworking logic of these two types of functions by adding one or more\nlow-level functions.\u003c/p\u003e\n\u003chr\u003e\n\u003ch3 id=\"barplot\"\u003eBarplot\u003c/h3\u003e\n\u003cp\u003eBarplot is used to create bar charts, which are a type of graph that\ndisplays categorical data as rectangular bars with heights or lengths\nproportional to the values they represent. By looking at the relative\nheights or lengths of the bars, it might be possible to quickly compare\nthe values and identify any trends or patterns. The barplot() function\nin base R has several arguments that can be used to customize the\nappearance and behavior of the resulting bar chart.\u003c/p\u003e\n\u003cp\u003eHere are some of the most commonly used arguments of the barplot()\nfunction:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eheight \u0026mdash; a vector or matrix of values that represent the heights\nof the bars. This argument is required.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003enames.arg \u0026mdash; a vector of names or labels for the bars. The length\nof this vector should be equal to the length of the height vector.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ecol \u0026mdash; a vector of colors for the bars. The length of this vector\nshould be equal to the length of the height vector.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eborder \u0026mdash; the color of the borders of the bars. The default value\nis \u0026ldquo;black\u0026rdquo;.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003emain \u0026mdash; a main title for the plot.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003exlab \u0026mdash; a label for the x-axis.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eylab \u0026mdash; a label for the y-axis.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003elegend.text \u0026mdash; a vector of labels for the legend.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eargs.legend \u0026mdash; a list of arguments to control the appearance of\nthe legend.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ewidth \u0026mdash; the width of the bars. The default value is 0.5.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003espace \u0026mdash; the amount of space between the bars. The default value\nis 1.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ehoriz \u0026mdash; a logical value that controls the orientation of the\nbars. If TRUE, the bars are horizontal; if FALSE, they are vertical.\nThe default value is FALSE.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003edensity \u0026mdash; the density of shading lines in the bars. The default\nvalue is 1.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eangle \u0026mdash; the angle of shading lines in the bars. The default value\nis 45.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eLets create a vector for barplot examples:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eset.seed(111)\nx1 \u0026lt;- sample(LETTERS[1:5], size = 20, rep= T)\nlet \u0026lt;- table(x1)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eBasic barplot with required arguments look like the following:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ebarplot(let)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/800/1*RXlHL2TlERcoG70oAPHV6A.jpeg\" alt=\"basicbarplot\"\u003e\u003c/p\u003e\n\u003cp\u003eHere how it looks like if I add some of the arguments:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ebarplot(let, main = \u0026#34;Title of the plot\u0026#34;,  \n        xlab = \u0026#34;X axis\u0026#34;, \n        ylab = \u0026#34;Y axis\u0026#34;, \n        horiz = T, \n        col = c(\u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;gray1\u0026#34;, \u0026#34;navy\u0026#34;, \u0026#34;gold\u0026#34;), # assigns colors by order\n        xlim = c(0,7), # limit values of the x axis\n        legend.text = c(\u0026#34;Group 1\u0026#34;, \u0026#34;Group 2\u0026#34;, \u0026#34;Group 3\u0026#34;, \u0026#34;Group 4\u0026#34;, \u0026#34;Group 5\u0026#34;)) # adds legends by order\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg src=\"https://cdn-images-1.medium.com/v2/resize:fit:800/1*Vj5EFT8XHg27jV8mnpDuRw.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAdvantages:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eBar plots are an effective way to represent categorical data as they\nallow easy visualization of the data.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eBar plots are intuitive and easy to understand, even for individuals\nwho are not familiar with the data.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThey allow for easy comparison of data across different categories\nor groups.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eBar plots can be used to display many different types of data,\nincluding frequency distributions, percentages, and counts.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThey can be customized by changing the colors, labels, and\norientation of the bars to make them more visually appealing.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eDisadvantages:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eBar plots are only useful for categorical data and may not be\nappropriate for continuous data.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf there are too many categories, the plot may become too cluttered\nto read easily.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf the scale of the y-axis is not appropriate, the bars can be\nmisleading and give the impression that the differences between the\ndata points are greater or smaller than they actually are.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf the bars are too wide or too close together, differences between\nthe data points may be obscured, making it difficult to accurately\ncompare the data.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eBar plots may not be the best choice for displaying complex data,\nand other visualization methods may be more appropriate.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"stacked-barplot\"\u003e\u003cstrong\u003eStacked Barplot\u003c/strong\u003e\u003c/h4\u003e\n\u003cp\u003eA stacked bar plot is a type of bar chart that displays multiple\nvariables by stacking them on top of each other. Each bar in the chart\nrepresents a category, and the height or length of the bar represents\nthe total value of the variables being stacked. The stacked bar plot\nbreaks down the total value of each category into different segments,\nwith each segment representing a different variable.\u003c/p\u003e\n\u003cp\u003eHere how stacked barplot looks like:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ebarplot(let2, xlab = \u0026#34;X axis\u0026#34;,\n        ylab = \u0026#34;Y axis\u0026#34;, \n        col = c(\u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;gray1\u0026#34;, \u0026#34;navy\u0026#34;, \u0026#34;gold\u0026#34;),\n        legend.text = rownames(let2),\n        xlim = c(0,3))\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg src=\"https://cdn-images-1.medium.com/v2/resize:fit:800/1*UTjFy0ixRud8ZzYxiXOCtw.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eA clustered barplot, also known as a \u003cem\u003egrouped barplot\u003c/em\u003e, is a type of bar\nchart that displays multiple variables for each category by grouping\nthem together. In a clustered barplot, each category has multiple bars,\none for each variable being displayed, and the bars for each variable\nare grouped together side by side.\u003c/p\u003e\n\u003cp\u003eHere how clustered barplot looks like:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ebarplot(let2, xlab = \u0026#34;X axis\u0026#34;, \n        ylab = \u0026#34;Y axis\u0026#34;, \n        col = c(\u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;gray1\u0026#34;, \u0026#34;navy\u0026#34;, \u0026#34;gold\u0026#34;),\n        legend.text = rownames(let2),\n        xlim = c(0,14),\n        beside = T # for clustered barplot\n) \n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg src=\"https://cdn-images-1.medium.com/v2/resize:fit:800/1*Bn4t9mVHFh64SDwKUvYdOw.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch4 id=\"clustered-barplotbarplot-with-a-low-level-functiontext\"\u003e\u003cstrong\u003eClustered Barplotbarplot() with a low-level function text()\u003c/strong\u003e\u003c/h4\u003e\n\u003cp\u003eFor this example, I will use \u003ccode\u003equakes\u003c/code\u003e dataset from\u003ccode\u003edatasets\u003c/code\u003e package in\nR. At first, I will set the bin widths with \u003ccode\u003eseq\u003c/code\u003e function. Then, I will\nchoose the limits to cut values with \u003ccode\u003ecut\u003c/code\u003e function. Lastly, I will use\n\u003ccode\u003etable\u003c/code\u003e function to prepare it for the barplot() function and it will\nlook like the follows in a basic form:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eb \u0026lt;- seq(4,6.5, by=0.5) # setting bin widths\n\nc \u0026lt;- cut(quakes$mag, breaks = b, right = F) # where to cut the values\n\nt \u0026lt;- table(c)\n\n# this is how it looks like in a basic form\nbarplot(t)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg src=\"https://cdn-images-1.medium.com/v2/resize:fit:800/1*OfoLDJNJjNyXKN6xWXnQjA.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eLets rock this!\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ebarplot(t, main = \u0026#34;earthquake counts by magnitude\u0026#34;, xlab = \u0026#34;madnitude\u0026#34;, \n        ylab = \u0026#34;Frequency\u0026#34;,\n        col = \u0026#34;chocolate\u0026#34;,\n        border = \u0026#34;khaki1\u0026#34;,\n        ylim = c(0,500))\ntext(0.7, 400,t[1])\ntext(1.85,450,t[2])\ntext(3.15,185,t[3])\ntext(4.25,55,t[4])\ntext(5.5,30,t[5])\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg src=\"https://cdn-images-1.medium.com/v2/resize:fit:800/1*zWy8eQWieuEAiqFaT3c7qg.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch3 id=\"pie-chart\"\u003ePie Chart\u003c/h3\u003e\n\u003cp\u003eA pie chart is a type of circular graph that is commonly used to\nrepresent data as a set of slices, where each slice corresponds to a\ncategory and its area or angle represents the proportion of that\ncategory relative to the whole. The total area or angle of the pie\nrepresents the total value of the data being displayed. The \u003ccode\u003epie()\u003c/code\u003e\nfunction in R is used to create a pie chart.\u003c/p\u003e\n\u003cp\u003eHere are some of the most commonly used arguments of pie() function:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ex: A vector of non-negative numeric values that specifies the data\nto be represented in the pie chart.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003elabels: A character vector of labels to be used for each slice of\nthe pie chart.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003emain: A title for the pie chart.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ecol: A vector of colors to be used for each slice of the pie\nchart.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eborder: A color to be used for the border of each slice of the pie\nchart.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003elty: The line type to be used for the border of each slice of the\npie chart.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003einit.angle: The starting angle in degrees for the first slice of\nthe pie chart.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eclockwise: A logical value that specifies whether the slices of the\npie chart should be drawn clockwise or counterclockwise.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003edensity: A value that specifies the density of shading lines for\neach slice of the pie chart.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eangle: A vector of angles in degrees to be used for shading each\nslice of the pie chart.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI will again create a vector to draw a pie chart. You can follow the\ncodes below:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eset.seed(111)\nx1 \u0026lt;- sample(LETTERS[1:5], size = 20, rep = T)  \nlet \u0026lt;- table(x1)\n\nr1 \u0026lt;- (let/length(x1))\n\nl1 \u0026lt;- paste(\u0026#34;Group-\u0026#34;, names(let) , sep= \u0026#34; \u0026#34; , r1*100, \u0026#34;%\u0026#34;)\n\n# basic pie() looks like the following:\npie(let, labels = l1, \n    main = \u0026#34;Title\u0026#34;,\n    col = c(\u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;gray2\u0026#34;, \u0026#34;navy\u0026#34;, \u0026#34;gold\u0026#34;)\n)\n\u003c/code\u003e\u003c/pre\u003e\u003chr\u003e\n\u003cp\u003ePie charts have several advantages and disadvantages. Some of these\ninclude:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAdvantages:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003ePie charts are easy to understand and interpret, making them a\npopular choice for displaying data.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThey allow for easy comparison of proportions or percentages across\ndifferent categories.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePie charts have an attractive design that can make data more\nappealing and engaging.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePie charts are efficient in terms of space and can display a large\namount of data in a small area.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThey are best used to display one set of data where the categories\ndo not have any overlapping.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eDisadvantages:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003ePie charts can be difficult to compare accurately, particularly if\nthe slices are small or if there are many categories.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThey can be misleading if the slices are not drawn to scale or if\nthe angles are not accurate.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePie charts may not be the best choice for displaying complex data,\nand other visualization methods may be more appropriate.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePie charts are not ideal for displaying large amounts of data or\ndata with many categories.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThey are limited to displaying proportions and do not show absolute\nvalues or counts.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"histogram\"\u003eHistogram\u003c/h3\u003e\n\u003cp\u003eA histogram is a graphical representation of the distribution of a\ndataset. It is a type of bar plot that represents the frequency or count\nof values that fall within a set of intervals or \u0026ldquo;bins\u0026rdquo;. The x-axis\nrepresents the intervals or bins of values, while the y-axis represents\nthe frequency or count of values that fall within each interval. Bin\nwidth is an important detail that has been widely studied in the\nliterature and is still debated. This is because deciding the number and\nwidth of the bins in a histogram can have a significant impact on the\nresulting visualization. Lets look at the significance of the bins with\nbasic histograms. I will use \u003ccode\u003empg\u003c/code\u003e variable from the \u003ccode\u003emtcars\u003c/code\u003e dataset.\nHere how histogram looks like with default bin width which is Sturges'\nformula.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003empg \u0026lt;- mtcars$mpgr\nhist(mpg)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/800/1*ME3iAXvrVIVYgMyoa0rBPw.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eIf I change breaks as follows, it will look like:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ehist(mpg, breaks = 2)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAssuming that I wanted to analyse this histogram to have an idea about\nthe distribution of the mpg variable, I would have different ideas about\nthe distribution of the mpg variable for both graphs. For this reason,\nthere are several methods for determining the appropriate number of\nbins, rules can be applied to \u003ccode\u003ehist\u003c/code\u003e function are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.tandfonline.com/doi/abs/10.1080/01621459.1926.10502161\"\u003eSturges'\nformula\u003c/a\u003e:\nThis method uses the following formula to determine the number of\nbins: k = 1 + log2(n), where k is the number of bins and n is the\nnumber of data points.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://link.springer.com/article/10.1007/BF01025868\"\u003eFreedman-Diaconis\nrule\u003c/a\u003e: This\nmethod uses the interquartile range (IQR) to determine the width of\neach bin. The formula for the bin width is: bin width = 2 * IQR /\n(n^(1/3)), where n is the number of data points.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://academic.oup.com/biomet/article-abstract/66/3/605/232642?redirectedFrom=fulltext\"\u003eScott's\nrule\u003c/a\u003e:\nThis method uses the standard deviation of the data to determine the\nwidth of each bin. The formula for the bin width is: bin width = 3.5\n* sd / (n^(1/3)), where sd is the standard deviation of the data\nand n is the number of data points.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHere are some of the most commonly used arguments of \u003ccode\u003ehist()\u003c/code\u003efunction:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ex: A vector of numeric values that specifies the data to be\nrepresented in the histogram.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ebreaks: A specification of the breakpoints (i.e., the edges of the\nbins) to use in the histogram. This can be a numeric vector, or a\nfunction such as breaks = \u0026quot;FD\u0026quot; to use the Freedman-Diaconis rule\nfor determining the bin widths.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003efreq: A logical value that specifies whether the y-axis should\nrepresent the frequency (i.e., the count of values in each bin) or\nthe density (i.e., the proportion of values in each bin).\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ecol: The color to use for the bars of the histogram.# border: The\ncolor to use for the borders of the bars of the histogram.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003elwd: The line width to use for the borders of the bars of the\nhistogram.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003edensity: A value between 0 and 1 specifying the density of shading\nlines for the bars of the histogram.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eangle: The angle in degrees of the shading lines for the bars of\nthe histogram.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eadd: A logical value that specifies whether the histogram should be\nadded to an existing plot.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eaxes: A logical value that specifies whether the axes should be\ndrawn for the histogram.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eplot: A logical value that specifies whether the histogram should\nbe plotted.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003elabels: A logical value that specifies whether labels should be\nadded to the bars of the histogram.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHere how histogram looks like if I add some of the arguments:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ehist(mpg,\n     breaks = \u0026#34;FD\u0026#34;, # for Freedman-Diaconis rule\n     freq = F,\n     ylim = c(0,0.08),\n     col = \u0026#34;burlywood4\u0026#34;,\n     border = \u0026#34;burlywood2\u0026#34;,\n     axes = F, labels = T)\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"hist-with-a-low-level-functionlines\"\u003ehist() with a low-level function lines()\u003c/h4\u003e\n\u003cp\u003eWith the low-level function lines() it is possible to draw a density\nline in the histogram, which can give better information about the\ndistribution of the data.\u003c/p\u003e\n\u003cp\u003eLets simulate a data for this example:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eset.seed(1212)\nx \u0026lt;- rnorm(1000, 10, 4)\nx \u0026lt;- sort(x, decreasing = F)\nfun \u0026lt;- dnorm(x, mean = mean(x), sd = sd(x)) # calculating density\nhist(x, main = \u0026#34;histogram of x\u0026#34;, ylab = \u0026#34;Density\u0026#34;, xlab = \u0026#34;x\u0026#34;,col=\u0026#34;grey\u0026#34;,\n     border=\u0026#34;black\u0026#34;, probability = T, ylim = c(0, max(fun))) # drawing histogram with high-level function hist()\nlines(x,fun, col = 1, lwd = 2) # adding density line with low-level function lines()\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/800/1*2iWMkV4_ec5clmNZabQ2xA.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eHistograms have several advantages and disadvantages. Some of these\ninclude:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAdvantages:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eHistograms are a useful tool for visualizing the distribution of a\ndataset. They provide a quick and easy way to see the range, shape,\nand central tendency of the data.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eHistograms are flexible and can be used to visualize a wide range of\ndata types, including continuous, discrete, and categorical data.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eHistograms can be used to identify outliers and unusual observations\nthat may be skewing the distribution of the data.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eHistograms can be easily created in R and other statistical software\npackages, and can be customized with a variety of options, such as\nbin width, color, and labels.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eDisadvantages:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eThe shape and appearance of a histogram can be sensitive to the\nchoice of bin width. Different bin widths can result in different\nvisualizations of the same data, which can make it difficult to\ncompare histograms.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eHistograms can be sensitive to the choice of the number of bins. Too\nfew bins can result in a loss of information about the distribution,\nwhile too many bins can create a noisy and difficult-to-interpret\nhistogram.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eHistograms can be misleading if the data are not properly\npreprocessed or if the data are not representative of the underlying\npopulation.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eHistograms can be difficult to interpret for large datasets, or when\nthere is a high degree of variation in the data.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"boxplot\"\u003eBoxplot\u003c/h3\u003e\n\u003cp\u003eA boxplot is a graphical representation of the distribution of a\ndataset. It is a standardized way of displaying the distribution of data\nbased on five summary statistics: the minimum value, the first quartile\n(Q1), the median, the third quartile (Q3), and the maximum value.\u003c/p\u003e\n\u003cp\u003eHere are some of the most commonly used arguments of the\n\u003ccode\u003eboxplot()\u003c/code\u003efunction:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eformula: a formula describing the variable(s) to be plotted.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003edata: the data frame containing the variables to be plotted.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003esubset: an optional vector specifying a subset of the data to be\nplotted.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ena.action: a function to handle missing data.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003enames: a character vector giving the names of the variables to be\nplotted.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ehorizontal: a logical value indicating whether to plot the boxes\nhorizontally or vertically.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003enotch: a logical value indicating whether to draw a notch around\nthe median of each box.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003evarwidth: a logical value indicating whether the boxes should be\ndrawn with widths proportional to the square root of the number of\nobservations in each group.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eoutline: a logical value indicating whether to draw individual\npoints outside of the whiskers.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ecol: the color of the boxes, whiskers, and outliers.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eborder: the color of the border around the boxes.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eboxwex: the width of the boxes.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eat: a numeric vector giving the locations of the boxes along the\nx-axis.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eadd: a logical value indicating whether to add the boxplot to an\nexisting plot.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHere how basic boxplot looks like:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eboxplot(mpg)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/800/1*ILzF7cirNkR31OG29MPAbQ.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eHere how it looks like if I add some of the arguments to the function:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eboxplot(mpg, col = \u0026#34;chocolate\u0026#34;, \n        border = \u0026#34;khaki4\u0026#34;, \n        notch = T, \n        horizontal = T, \n        varwidth = T)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/800/1*ma8gKAFDPu0XvEn0m4x75Q.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch4 id=\"boxplot-with-a-low-level-function-text-abline\"\u003eboxplot() with a low-level function text() \u0026amp; abline()\u003c/h4\u003e\n\u003cp\u003eI will use \u003ccode\u003eiris\u003c/code\u003e dataset for this example. I will draw a line at the\nmean of Sepal Width using \u003ccode\u003eabline\u003c/code\u003e function. After, I will add /xbar to\nthe line.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eboxplot(iris$Sepal.Width~iris$Species, # group by species\n        main = \u0026#34;Sepal widths by species\u0026#34;,\n        col = c(\u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;gold\u0026#34;),\n        horizontal = T)\nabline(v = mean(iris$Sepal.Width), lty = 2) # adding horizontal line at the mean of sepal.width\ntext(3.1, 0.5, expression(bar(x))) # adding /xbar\n\u003c/code\u003e\u003c/pre\u003e\u003chr\u003e\n\u003cp\u003e\u003cstrong\u003eScatterplot\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eIn base R, it is possible to draw both line and scatterplot with the\nplot() function. A scatter plot is a type of graph that displays the\nrelationship between two continuous variables. Each point on the plot\nrepresents a single observation, with the x-axis representing the values\nof one variable and the y-axis representing the values of the other\nvariable. A line plot is a graph that displays data points connected by\nstraight lines. The x-axis represents the independent variable, and the\ny-axis represents the dependent variable.\u003c/p\u003e\n\u003cp\u003eHere is a basic scatterplot with plot() function:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eplot(mtcars$mpg, mtcars$hp)\n\u003c/code\u003e\u003c/pre\u003e\u003chr\u003e\n\u003cp\u003eScatter plots have several advantages and disadvantages. Some of these\ninclude:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAdvantages:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eProvide a visual representation of the relationship between two\nvariables.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eShow the presence or absence of a relationship between the two\nvariables.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eHelp in identifying outliers, trends, and patterns.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eProvide information about the direction and strength of the\nrelationship between the variables.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eDisadvantages:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eCan only show the relationship between two variables.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMay be difficult to interpret when there are a large number of\nobservations.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMay not always show the true nature of the relationship between the\nvariables.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCorrelation does not imply causation, and it is important to be\ncautious when interpreting the relationship shown in a scatter plot.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"line-plot\"\u003eLine Plot\u003c/h3\u003e\n\u003cp\u003eA line plot is a graph that displays data points connected by straight\nlines. # The x-axis represents the independent variable, and the y-axis\nrepresents the dependent variable. Here is a basic line plot with plot()\nfunction:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eplot(mpg, type = \u0026#34;l\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eLine plots have several advantages and disadvantages. Some of these\ninclude:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAdvantages:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eCan show trends in data over time and provide insight into how the\ndata changes.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCan also reveal patterns or fluctuations in the data that may not be\nimmediately apparent from a table of numbers.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eEasy to create and read, making them an effective way to communicate\ndata to a wide audience.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCan be used to compare multiple sets of data on the same graph,\nallowing for easy visual comparison.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eDisadvantages:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eMay not be appropriate for data that does not change over time.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMay not be useful for showing data with a large number of categories\nor data points.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCan be misleading if the data is not plotted accurately or if the\nscale of the graph is not appropriate.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMay not be useful for identifying outliers or extreme values in the\ndata.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe arguments for the \u003ccode\u003eplot()\u003c/code\u003efunction can vary depending on the type of\ngraph being created. Here are some common arguments for the the\nfunction:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ex and y: the data to be plotted on the x-axis and y-axis,\nrespectively.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003etype: the type of plot to be created. For example, \u0026quot;p\u0026quot; creates a\nscatter plot with points, \u0026quot;l\u0026quot; creates a line plot, \u0026quot;b\u0026quot; creates\nboth points and lines, and \u0026quot;h\u0026quot; creates a histogram.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003emain: the main title of the plot.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003exlab and ylab: the labels for the x-axis and y-axis, respectively.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003exlim and ylim: limits for the x-axis and y-axis, respectively.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ecol: the color to be used for the points or lines\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003epch: type of symbol to be used for the points\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003elty: Type of line\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ebty: type of box\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHere how scatterplot looks like when I use these arguments:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eplot(mtcars$mpg, mtcars$hp,\n     main = \u0026#34;Title of the plot\u0026#34;,\n     xlab = \u0026#34;X axis\u0026#34;,\n     ylab = \u0026#34;Y axis\u0026#34;,\n     col = \u0026#34;chocolate\u0026#34;,\n     pch = \u0026#34;x\u0026#34;,\n     bty = \u0026#34;n\u0026#34;\n     )\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eplot(mpg, \n     type = \u0026#34;l\u0026#34;,\n     main = \u0026#34;Title of the plot\u0026#34;,\n     xlab = \u0026#34;X axis\u0026#34;,\n     ylab = \u0026#34;Y axis\u0026#34;,\n     col = \u0026#34;chocolate\u0026#34;,\n     lty = \u0026#34;dashed\u0026#34;,\n     bty = \u0026#34;L\u0026#34; \n     )\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/800/1*MyA2giyjELoSA_RC8BI_7Q.jpeg\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch4 id=\"plot-with-low-level-functionpoints\"\u003eplot() with low-level function points()\u003c/h4\u003e\n\u003cp\u003eFor this example, I will draw a partial function graph.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ex1 \u0026lt;- seq(-2,-1.01, len = 100)\ny1 \u0026lt;- x1^2\nx2 \u0026lt;- seq(-1,1, len = 100)\ny2 \u0026lt;- rep(1, 100) \nx3 \u0026lt;- seq(1.01, 2, len = 100)\ny3 \u0026lt;- 2* x3 -1\n\nplot(x1,y1, xlim = c(-2,2), ylim = c(0,5), type = \u0026#34;l\u0026#34;, lwd = 3, col = \u0026#34;tomato2\u0026#34;, bty = \u0026#34;L\u0026#34;, xlab = \u0026#34;\u0026#34;, ylab = \u0026#34;\u0026#34;, main = \u0026#34;plot() \u0026amp; points()\u0026#34;)\npoints(x2,y2,type = \u0026#34;l\u0026#34;, lwd = 3, col = \u0026#34;chocolate4\u0026#34;)\npoints(x3,y3,type = \u0026#34;l\u0026#34;, lwd = 3, col = \u0026#34;lightsalmon\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"plot-with-a-low-level-function-lines-andlegend\"\u003eplot() with a low-level function lines() and legend()\u003c/h4\u003e\n\u003cp\u003eFor this example, I will simulate chisquare distributed vectors with\ndifferent degrees of freedom.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ex \u0026lt;- seq(0,60, len=1000)\n\ndf \u0026lt;- c(5,10,20,30) # setting degrees of freedom\ncolor \u0026lt;- c(\u0026#34;red\u0026#34;,\u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;,  \u0026#34;orange2\u0026#34;) # setting line colors\ntitle \u0026lt;- paste(\u0026#34;Chi-Square, df=\u0026#34;, df, sep = \u0026#34;\u0026#34; ) # setting titles\nline_type \u0026lt;- c(2,1,1,1) # setting line types\nline_width \u0026lt;- c(1,1,1,1) # setting line widths\n\nplot(x,xlim=c(0,60), ylim = c(0,0.15), main = \u0026#34;Different Chi-Square Distributions\u0026#34;, ylab=\u0026#34;Density\u0026#34;, type = \u0026#34;n\u0026#34;) # drawing empty plot\nfor (i in 1:length(df) ) { # for loop to draw line for each df\n  x \u0026lt;- seq(0,60, len=1000)\n  fx \u0026lt;- dchisq(x, df = df[i])\n  lines(x, fx, main = title[i], xlab = \u0026#34;x\u0026#34;, ylab =\u0026#34;Density\u0026#34;, col=color[i], lwd = line_width[i], lty = line_width[i])\n}\nlegend(\u0026#34;topright\u0026#34;, legend = title, col=color, lty = line_type) # legend to distinguish lines\n\u003c/code\u003e\u003c/pre\u003e\u003chr\u003e\n\u003ch3 id=\"par-function\"\u003e\u003cstrong\u003epar Function\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003eThe par() function is a built-in function in R that is used to set or\nretrieve graphical parameters. These parameters control the appearance\nof the graphics such as the size of the plotting region, the margins,\nthe axes, the color, and more. Here are some of the most common\narguments for the par() function:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003emfrow and mfcol: specify the number of rows and columns of plots to\nbe created on a page. mfrow creates plots in a matrix format,\nfilling rows first, while mfcol fills columns first.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003emar: the margins of the plotting region in the form c(bottom, left,\ntop, right)\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eoma: outer margins of the plotting region, i.e., the space between\nthe edge of the plotting region and the main title, axis labels, and\nso on, in the form c(bottom, left, top, right).\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003epty: the type of plot region to be used, either \u0026quot;s\u0026quot; (square) or\n\u0026quot;m\u0026quot; (maximal).\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003exaxs and yaxs: the style of the axis ranges. A value of \u0026quot;r\u0026quot;\n(default) indicates that the axis limits should be rounded to the\nnearest integer multiple of the tick interval, while a value of\n\u0026quot;i\u0026quot; indicates that the axis limits should be exactly at the data\nrange limits.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ecol: the color palette to be used for subsequent plots.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003elty: the default line type to be used for subsequent plots.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003elwd: the default line width to be used for subsequent plots.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ebg: background of the plot\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003ecex: the size of the text used for plot symbols and axis labels.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003epch: the plotting character to be used for plot symbols.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003elas: the orientation of axis labels. A value of 0 indicates\nhorizontal labels, while 1, 2, and 3 indicate labels perpendicular\nto the axis.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003elog: whether the x- and/or y-axis should be plotted on a\nlogarithmic scale. A value of \u0026quot;x\u0026quot; indicates a logarithmic x-axis,\nwhile \u0026quot;y\u0026quot; indicates a logarithmic y-axis, and \u0026quot;xy\u0026quot; indicates a\nlogarithmic scale for both axes.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003exlim and ylim: the limits of the x- and y-axis, respectively.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003exaxt and yaxt: the style of the axis ticks. A value of \u0026quot;n\u0026quot;\nindicates that no axis should be drawn, while \u0026quot;s\u0026quot; indicates a\nsmall axis, \u0026quot;m\u0026quot; indicates a medium axis, and \u0026quot;l\u0026quot; indicates a\nlarge axis.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI will use the last example to show \u003ccode\u003epar\u003c/code\u003e function. However, line will\nnot be in the same graph this time.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003epar(bg=\u0026#34;cornsilk\u0026#34;, \n    mfrow = c(2,2), \n    lwd = 4, \n    col = \u0026#34;burlywood4\u0026#34;, \n    pty=\u0026#34;m\u0026#34;, \n    oma = c(0,0,0,0)\n    )\n\nfor (i in 1:length(df) ) {\n  x \u0026lt;- seq(0,60, len=1000)\n  fx \u0026lt;- dchisq(x, df = df[i])\n  plot(x, fx, main = title[i], xlab = \u0026#34;x\u0026#34;, ylab =\u0026#34;Density\u0026#34;, col=color[i], type = \u0026#34;l\u0026#34; , lwd=2)\n}\n\u003c/code\u003e\u003c/pre\u003e\u003chr\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eIMPORTANT NOTE:\u003c/strong\u003e The settings made with the par() function\npermanently change the graphics settings. For this reason, it is\nnecessary to reset the graphics settings after each use. For this, the\ndev.off() command can be used.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eJust like always:\u003c/p\u003e\n\u003cp\u003e\u0026quot;In case I don't see ya, good afternoon, good evening, and good\nnight!\u0026quot;\u003c/p\u003e\n\u003chr\u003e\n\u003ch3 id=\"useful-resources\"\u003eUseful Resources\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://r-graph-gallery.com/index.html\"\u003eR Graph Gallery\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://bookdown.org/aschmi11/RESMHandbook/data-visualization-in-base-r.html\"\u003eR Software\nHandbook\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.analyticsvidhya.com/blog/2015/07/guide-data-visualization-r/\"\u003eAnalytics\nVidhya\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://datacarpentry.org/R-genomics/05-data-visualization.html\"\u003eData\nCarpentry\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n","description":"","image":null,"permalink":"https://hugo-profile.netlify.app/blogs/dataviz/","title":"Data Visualization"},{"content":"\u003ch2 id=\"mathjax\"\u003eMathjax\u003c/h2\u003e\n\u003cp\u003eMath equations can be rendered using \u003ca href=\"https://www.mathjax.org\"\u003eMathjax\u003c/a\u003e syntax with AMS symbol support.\u003c/p\u003e\n\u003cp\u003eOptionally enable this on a per-page basis by adding \u003ccode\u003emathjax: true\u003c/code\u003e to your frontmatter.\u003c/p\u003e\n\u003cp\u003eThen, use \u003ccode\u003e$$ ... $$\u003c/code\u003e on a line by itself to render a block equation:\u003c/p\u003e\n\u003cp\u003e$$ | Pr_{x \\leftarrow P_{1}} [A(x) = 1] - Pr_{x \\leftarrow P_{2}} [A(x) = 1] | \u0026lt; \\text{negligible} $$\u003c/p\u003e\n\u003cp\u003eThe raw version is:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$$ | Pr_{x \\leftarrow P_{1}} [A(x) = 1] - Pr_{x \\leftarrow P_{2}} [A(x) = 1] | \u0026lt; \\text{negligible} $$\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWrite in-line equations with \u003ccode\u003e\\\\( ... \\\\)\u003c/code\u003e , like \\( x^n / y \\) . It\u0026rsquo;s easy!\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eWrite in-line equations with `\\\\( ... \\\\)` , like \\\\( x^n / y \\\\) . It\u0026#39;s easy!\n\u003c/code\u003e\u003c/pre\u003e","description":"","image":"/images/mathjax.png","permalink":"https://hugo-profile.netlify.app/blogs/math/","title":"Render Math With Mathjax"},{"content":"","description":"My gallery :earth_asia:","image":null,"permalink":"https://hugo-profile.netlify.app/gallery/","title":"Image Gallery"},{"content":"\u003ch2 id=\"paragraph\"\u003eParagraph\u003c/h2\u003e\n\u003cp\u003eXerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\u003c/p\u003e\n\u003cp\u003eItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\u003c/p\u003e\n\u003ch2 id=\"blockquotes\"\u003eBlockquotes\u003c/h2\u003e\n\u003cp\u003eThe blockquote element represents content that is quoted from another source, optionally with a citation which must be within a \u003ccode\u003efooter\u003c/code\u003e or \u003ccode\u003ecite\u003c/code\u003e element, and optionally with in-line changes such as annotations and abbreviations.\u003c/p\u003e\n\u003ch3 id=\"blockquote-without-attribution\"\u003eBlockquote without attribution\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTiam, ad mint andaepu dandae nostion secatur sequo quae.\n\u003cstrong\u003eNote\u003c/strong\u003e that you can use \u003cem\u003eMarkdown syntax\u003c/em\u003e within a blockquote.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"blockquote-with-attribution\"\u003eBlockquote with attribution\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDon\u0026rsquo;t communicate by sharing memory, share memory by communicating.\u003c/p\u003e\n— \u003ccite\u003eRob Pike\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/cite\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"tables\"\u003eTables\u003c/h2\u003e\n\u003cp\u003eTables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eAge\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eBob\u003c/td\u003e\n\u003ctd\u003e27\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eAlice\u003c/td\u003e\n\u003ctd\u003e23\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"inline-markdown-within-tables\"\u003eInline Markdown within tables\u003c/h3\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eInline   \u003c/th\u003e\n\u003cth\u003eMarkdown   \u003c/th\u003e\n\u003cth\u003eIn   \u003c/th\u003e\n\u003cth\u003eTable\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cem\u003eitalics\u003c/em\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003ebold\u003c/strong\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cdel\u003estrikethrough\u003c/del\u003e   \u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003ecode\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"code-blocks\"\u003eCode Blocks\u003c/h2\u003e\n\u003ch3 id=\"code-block-with-backticks\"\u003eCode block with backticks\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026lt;\u003cspan style=\"color:#f92672\"\u003ehtml\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003elang\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;en\u0026#34;\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u0026lt;\u003cspan style=\"color:#f92672\"\u003ehead\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u0026lt;\u003cspan style=\"color:#f92672\"\u003emeta\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003echarset\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;UTF-8\u0026#34;\u003c/span\u003e /\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u0026lt;\u003cspan style=\"color:#f92672\"\u003etitle\u003c/span\u003e\u0026gt;Example HTML5 Document\u0026lt;/\u003cspan style=\"color:#f92672\"\u003etitle\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u0026lt;/\u003cspan style=\"color:#f92672\"\u003ehead\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u0026lt;\u003cspan style=\"color:#f92672\"\u003ebody\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u0026lt;\u003cspan style=\"color:#f92672\"\u003ep\u003c/span\u003e\u0026gt;Test\u0026lt;/\u003cspan style=\"color:#f92672\"\u003ep\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u0026lt;/\u003cspan style=\"color:#f92672\"\u003ebody\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026lt;/\u003cspan style=\"color:#f92672\"\u003ehtml\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"code-block-indented-with-four-spaces\"\u003eCode block indented with four spaces\u003c/h3\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\n\u0026lt;head\u0026gt;\n  \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\n  \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\n\u0026lt;/head\u0026gt;\n\u0026lt;body\u0026gt;\n  \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\n\u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"code-block-with-hugos-internal-highlight-shortcode\"\u003eCode block with Hugo\u0026rsquo;s internal highlight shortcode\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026lt;\u003cspan style=\"color:#f92672\"\u003ehtml\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003elang\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;en\u0026#34;\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026lt;\u003cspan style=\"color:#f92672\"\u003ehead\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u0026lt;\u003cspan style=\"color:#f92672\"\u003emeta\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003echarset\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;UTF-8\u0026#34;\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u0026lt;\u003cspan style=\"color:#f92672\"\u003etitle\u003c/span\u003e\u0026gt;Example HTML5 Document\u0026lt;/\u003cspan style=\"color:#f92672\"\u003etitle\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026lt;/\u003cspan style=\"color:#f92672\"\u003ehead\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026lt;\u003cspan style=\"color:#f92672\"\u003ebody\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u0026lt;\u003cspan style=\"color:#f92672\"\u003ep\u003c/span\u003e\u0026gt;Test\u0026lt;/\u003cspan style=\"color:#f92672\"\u003ep\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026lt;/\u003cspan style=\"color:#f92672\"\u003ebody\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026lt;/\u003cspan style=\"color:#f92672\"\u003ehtml\u003c/span\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"list-types\"\u003eList Types\u003c/h2\u003e\n\u003ch3 id=\"ordered-list\"\u003eOrdered List\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eFirst item\u003c/li\u003e\n\u003cli\u003eSecond item\u003c/li\u003e\n\u003cli\u003eThird item\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"unordered-list\"\u003eUnordered List\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eList item\u003c/li\u003e\n\u003cli\u003eAnother item\u003c/li\u003e\n\u003cli\u003eAnd another item\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"nested-list\"\u003eNested list\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eItem\n\u003col\u003e\n\u003cli\u003eFirst Sub-item\u003c/li\u003e\n\u003cli\u003eSecond Sub-item\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"headings\"\u003eHeadings\u003c/h2\u003e\n\u003cp\u003eThe following HTML \u003ccode\u003e\u0026lt;h1\u0026gt;\u003c/code\u003e—\u003ccode\u003e\u0026lt;h6\u0026gt;\u003c/code\u003e elements represent six levels of section headings. \u003ccode\u003e\u0026lt;h1\u0026gt;\u003c/code\u003e is the highest section level while \u003ccode\u003e\u0026lt;h6\u0026gt;\u003c/code\u003e is the lowest.\u003c/p\u003e\n\u003ch1 id=\"h1\"\u003eH1\u003c/h1\u003e\n\u003ch2 id=\"h2\"\u003eH2\u003c/h2\u003e\n\u003ch3 id=\"h3\"\u003eH3\u003c/h3\u003e\n\u003ch4 id=\"h4\"\u003eH4\u003c/h4\u003e\n\u003ch5 id=\"h5\"\u003eH5\u003c/h5\u003e\n\u003ch6 id=\"h6\"\u003eH6\u003c/h6\u003e\n\u003ch2 id=\"other-elements--abbr-sub-sup-kbd-mark\"\u003eOther Elements — abbr, sub, sup, kbd, mark\u003c/h2\u003e\n\u003cp\u003e\u003cabbr title=\"Graphics Interchange Format\"\u003eGIF\u003c/abbr\u003e is a bitmap image format.\u003c/p\u003e\n\u003cp\u003eH\u003csub\u003e2\u003c/sub\u003eO\u003c/p\u003e\n\u003cp\u003eX\u003csup\u003en\u003c/sup\u003e + Y\u003csup\u003en\u003c/sup\u003e = Z\u003csup\u003en\u003c/sup\u003e\u003c/p\u003e\n\u003cp\u003ePress \u003ckbd\u003e\u003ckbd\u003eCTRL\u003c/kbd\u003e+\u003ckbd\u003eALT\u003c/kbd\u003e+\u003ckbd\u003eDelete\u003c/kbd\u003e\u003c/kbd\u003e to end the session.\u003c/p\u003e\n\u003cp\u003eMost \u003cmark\u003esalamanders\u003c/mark\u003e are nocturnal, and hunt for insects, worms, and other small creatures.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eThe above quote is excerpted from Rob Pike\u0026rsquo;s \u003ca href=\"https://www.youtube.com/watch?v=PAAkCSZUG1c\"\u003etalk\u003c/a\u003e during Gopherfest, November 18, 2015.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n","description":"","image":"/images/post.jpg","permalink":"https://hugo-profile.netlify.app/blogs/markdown-syntax/","title":"Markdown Syntax"},{"content":"\u003cp\u003eEmoji can be enabled in a Hugo project in a number of ways. :zap:\u003c/p\u003e\n\u003ch2 id=\"emoji-support\"\u003eEmoji Support\u003c/h2\u003e\n\u003cp\u003eThe \u003ca href=\"https://gohugo.io/functions/emojify/\"\u003eemojify\u003c/a\u003e function can be called directly in templates or \u003ca href=\"https://gohugo.io/templates/shortcode-templates/#inline-shortcodes\"\u003eInline Shortcodes\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eTo enable emoji globally, set \u003ccode\u003eenableEmoji\u003c/code\u003e to \u003ccode\u003etrue\u003c/code\u003e in your site’s \u003ca href=\"https://gohugo.io/getting-started/configuration/\"\u003econfiguration\u003c/a\u003e and then you can type emoji shorthand codes directly in content files; e.g.\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"http://www.emoji-cheat-sheet.com/\"\u003eEmoji cheat sheet\u003c/a\u003e is a useful reference for emoji shorthand codes.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003e\u003cstrong\u003eN.B.\u003c/strong\u003e The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e.emoji {\n  font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols;\n}\n\u003c/code\u003e\u003c/pre\u003e","description":"","image":"/images/post.jpg","permalink":"https://hugo-profile.netlify.app/blogs/emoji-support/","title":"Emoji Support"},{"content":"\u003cp\u003eLorem est tota propiore conpellat pectoribus de pectora summo.\u003c/p\u003e\n\u003cp\u003eRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eExierant elisi ambit vivere dedere\u003c/li\u003e\n\u003cli\u003eDuce pollice\u003c/li\u003e\n\u003cli\u003eEris modo\u003c/li\u003e\n\u003cli\u003eSpargitque ferrea quos palude\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eRursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eComas hunc haec pietate fetum procerum dixit\u003c/li\u003e\n\u003cli\u003ePost torum vates letum Tiresia\u003c/li\u003e\n\u003cli\u003eFlumen querellas\u003c/li\u003e\n\u003cli\u003eArcanaque montibus omnes\u003c/li\u003e\n\u003cli\u003eQuidem et\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch1 id=\"vagus-elidunt\"\u003eVagus elidunt\u003c/h1\u003e\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Canons_of_page_construction#Van_de_Graaf_canon\"\u003eThe Van de Graaf Canon\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"mane-refeci-capiebant-unda-mulcebat\"\u003eMane refeci capiebant unda mulcebat\u003c/h2\u003e\n\u003cp\u003eVicta caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\u003c/p\u003e\n\u003cp\u003eIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\u003c/p\u003e\n\u003cp\u003eEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\u003c/p\u003e\n","description":"","image":"/images/post.jpg","permalink":"https://hugo-profile.netlify.app/blogs/placeholder-text/","title":"Placeholder Text"},{"content":"\u003cp\u003eHugo ships with several \u003ca href=\"https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes\"\u003eBuilt-in Shortcodes\u003c/a\u003e for rich content, along with a \u003ca href=\"https://gohugo.io/about/hugo-and-gdpr/\"\u003ePrivacy Config\u003c/a\u003e and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\u003c/p\u003e\n\u003ch2 id=\"gist-simple-shortcode\"\u003eGist Simple Shortcode\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{{\u0026lt; gist spf13 7896402 \u0026#34;img.html\u0026#34; \u0026gt;}}\n\u003c/code\u003e\u003c/pre\u003e\u003cbr\u003e\n\u003cscript type=\"application/javascript\" src=\"https://gist.github.com/spf13/7896402.js?file=img.html\"\u003e\u003c/script\u003e\n\n\u003cbr\u003e\n\u003ch2 id=\"twitter-simple-shortcode\"\u003eTwitter Simple Shortcode\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{{\u0026lt; tweet GoHugoIO 1315233626070503424 \u0026gt;}}\n\u003c/code\u003e\u003c/pre\u003e\u003cbr\u003e\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"en\" dir=\"ltr\"\u003eProfile is a customizable single-page portfolio theme for Hugo featuring a contact form and blog. Made by \u003ca href=\"https://twitter.com/gurusabarishh?ref_src=twsrc%5Etfw\"\u003e@gurusabarishh\u003c/a\u003e.\u003ca href=\"https://t.co/KwYcwfdy16\"\u003ehttps://t.co/KwYcwfdy16\u003c/a\u003e\u003c/p\u003e\u0026mdash; GoHugo.io (@GoHugoIO) \u003ca href=\"https://twitter.com/GoHugoIO/status/1315233626070503424?ref_src=twsrc%5Etfw\"\u003eOctober 11, 2020\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n\u003cbr\u003e\n\u003ch2 id=\"vimeo-simple-shortcode\"\u003eVimeo Simple Shortcode\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{{\u0026lt; vimeo 146022717 \u0026gt;}}\n\u003c/code\u003e\u003c/pre\u003e\u003cbr\u003e\n\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n  \u003ciframe src=\"https://player.vimeo.com/video/146022717\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"vimeo video\" webkitallowfullscreen mozallowfullscreen allowfullscreen\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\u003cbr\u003e\n\u003ch2 id=\"youtube-simple-shortcode\"\u003eYoutube Simple Shortcode\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{{\u0026lt; youtube w7Ft2ymGmfc \u0026gt;}}\n\u003c/code\u003e\u003c/pre\u003e\u003cbr\u003e\n\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n  \u003ciframe src=\"https://www.youtube.com/embed/w7Ft2ymGmfc\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen title=\"YouTube Video\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\u003cbr\u003e\n\u003ch2 id=\"theme-custom-shortcodes\"\u003eTheme Custom Shortcodes\u003c/h2\u003e\n\u003cp\u003eThese shortcodes are not Hugo built-ins, but are provided by the theme.\u003c/p\u003e\n\u003ch3 id=\"responsive-images-with-cloudinary\"\u003eResponsive Images with Cloudinary\u003c/h3\u003e\n\u003cp\u003eYou can learn more about this \u003ca href=\"https://cloudinary.com/documentation/responsive_images\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eSet the \u003ccode\u003ecloudinary_cloud_name\u003c/code\u003e parameter in your site config to use this shortcode.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{{\u0026lt; dynamic-img src=\u0026#34;/my/image/on/cloudinary\u0026#34; title=\u0026#34;A title for the image\u0026#34; \u0026gt;}}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNote that you do not include the file extension (e.g. \u003ccode\u003e.png\u003c/code\u003e) in the \u003ccode\u003esrc\u003c/code\u003e parameter, as the shortcode will automatically determine the best quality and format for the user\u0026rsquo;s device.\u003c/p\u003e\n\u003cp\u003eOptionally, you can customize the general CSS styles for the image:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{{\u0026lt; dynamic-img src=\u0026#34;/my/image/on/cloudinary\u0026#34; title=\u0026#34;A title for the image\u0026#34; style=\u0026#34;max-width:60%\u0026#34; \u0026gt;}}\n\u003c/code\u003e\u003c/pre\u003e","description":"","image":"/images/post.jpg","permalink":"https://hugo-profile.netlify.app/blogs/rich-content/","title":"Rich Content"},{"content":"\u003ch1 id=\"r-markdown\"\u003eR Markdown\u003c/h1\u003e\n\u003cp\u003eThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see \u003ca href=\"http://rmarkdown.rstudio.com\"\u003ehttp://rmarkdown.rstudio.com\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eYou can embed an R code chunk like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-r\" data-lang=\"r\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003esummary\u003c/span\u003e(cars)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e##      speed           dist       \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e##  Min.   : 4.0   Min.   :  2.00  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e##  1st Qu.:12.0   1st Qu.: 26.00  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e##  Median :15.0   Median : 36.00  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e##  Mean   :15.4   Mean   : 42.98  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e##  3rd Qu.:19.0   3rd Qu.: 56.00  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e##  Max.   :25.0   Max.   :120.00\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efit \u003cspan style=\"color:#f92672\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003elm\u003c/span\u003e(dist \u003cspan style=\"color:#f92672\"\u003e~\u003c/span\u003e speed, data \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e cars)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efit\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e## \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e## Call:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e## lm(formula = dist ~ speed, data = cars)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e## \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e## Coefficients:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e## (Intercept)        speed  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e##     -17.579        3.932\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"including-plots\"\u003eIncluding Plots\u003c/h1\u003e\n\u003cp\u003eYou can also embed plots. See Figure \u003ca href=\"#fig:pie\"\u003e1\u003c/a\u003e for example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-r\" data-lang=\"r\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003epar\u003c/span\u003e(mar \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ec\u003c/span\u003e(\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003epie\u003c/span\u003e(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003ec\u003c/span\u003e(\u003cspan style=\"color:#ae81ff\"\u003e280\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e60\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e20\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003ec\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Sky\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Sunny side of pyramid\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Shady side of pyramid\u0026#39;\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  col \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ec\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;#0292D8\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;#F7EA39\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;#C4B632\u0026#39;\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  init.angle \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e-50\u003c/span\u003e, border \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eNA\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"figure\"\u003e\n\u003cimg src=\"https://hugo-profile.netlify.app/post/2020-12-01-r-rmarkdown/index_files/figure-html/pie-1.png\" alt=\"A fancy pie chart.\" width=\"672\" /\u003e\n\u003cp class=\"caption\"\u003eFigure 1: A fancy pie chart.\u003c/p\u003e\n\u003c/div\u003e\n","description":null,"image":null,"permalink":"https://hugo-profile.netlify.app/post/2020-12-01-r-rmarkdown/","title":"Hello R Markdown"},{"content":"\u003cp\u003eLiving is the art of dealing with as many problems as there are solutions. For this reason, as long as we are alive, we constantly have to struggle with a number of problems.\u003c/p\u003e\n\u003cp\u003eThere will always be problems, waiting to be solved. All we need to do is to try over and over again to overcome them. Just like Albert Einstein states:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e\u0026ldquo;It\u0026rsquo;s not that I\u0026rsquo;m so smart, it\u0026rsquo;s just that I stay with problems longer.\u0026rdquo;\u003c/em\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIn this article, I\u0026rsquo;m going to repeat the Infinite Monkey theorem using the R programming language, which I think can make you feel better when you think you are in a difficult situation.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eThe infinite monkey theorem is a hypothesis that states that an infinite number of monkeys, given an infinite amount of time and typewriters, would eventually produce the complete works of William Shakespeare or any other written text[1]. The idea behind the theorem is that given enough time and randomness, even highly improbable events can occur. The earliest known reference to the idea of monkeys typing at random comes from a 1913 essay by French mathematician Émile Borel, who used the concept to illustrate the concept of probability.\u003c/p\u003e\n\u003cp\u003eThe statistical proof of the theorem can be explained in a basic form as if two events are statistically independent (the events do not affect each other\u0026rsquo;s outcome), the probability of these two events occurring together is equal to the product of the probabilities of these events occurring separately.\u003c/p\u003e\n\u003cp\u003eIn fact, it can also be said that this theorem also points us to the Gambler\u0026rsquo;s Fallacy[2], a logical fallacy that many people fall victim to. To illustrate this fallacy, consider the classical coin toss experiment. Most people assume that because a coin has come up heads several times in a row, it\u0026rsquo;s more likely to come up tails in the next flip. However, it is absolutely impossible to know this for sure. After all, the probability for each independent flip is always 50%. Of course, this only applies if the coin is not cheated.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eNow, I am going to create a monkey to implement this theorem in R. This monkey is of course a function. Then I will try to randomly print some text to this monkey.\u003c/p\u003e\n\u003cp\u003eI think it is a good coding exercise to put some theorems, thought experiments, ideas into code. Thinking like a machine(algorithmic thinking) can be the most important component to turn the ideas in your mind into code. So, if you are faced with a task that you have never encountered before and you don\u0026rsquo;t know what to do, instead of struggling with writing the code, you can create a road map for yourself. This road map will actually \u0026ldquo;code\u0026rdquo; your coding skills. In this project, I will also show how I cope with this situation.\u003c/p\u003e\n\u003cp\u003eWhat do I need to do to code the infinite monkey theory?\u003c/p\u003e\n\u003cp\u003eOf course, I need the monkey! Lets create our monkey that randomly hits keys on a typewriter.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emonkey_the_author \u0026lt;- function(passage) {\n  chars \u0026lt;- c(letters, \u0026#34; \u0026#34;)\n  paste0(sample(chars, length(passage[1]), replace = TRUE), collapse = \u0026#34;\u0026#34;)\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAfter I have monkey, I need to do the experiment. Let\u0026rsquo;s start with a simple single word, monkey.\u003c/p\u003e\n\u003cp\u003eTo wrote this code, basically, I can say that I think in this way:\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eI have a monkey that hits random keys. I\u0026rsquo;m going to ask this monkey to type a certain text, so I know the length of this text, I know the content of this text. When the monkey presses random keys, I have to make sure that the key it presses is the same as my target passage. And I have to keep doing this until the condition I want is met. So instead of for, I need to use a repeat loop. And the end of this loop is when the monkey reaches the final text.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eTo make it easy to understand, I wrote explanation about what each line does in code chunk!\u003c/p\u003e\n\u003chr\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003epassage1 \u0026lt;- (\u0026#34;monkey\u0026#34;)\n\ncount \u0026lt;- 0 # I want to know how many hits the monkey needed to write the passage.\nset.seed(123)\nrepeat { # I will use repeat loop because the loop has to continue until the condition I want is met.\n  count \u0026lt;- count + 1\n  test_passage \u0026lt;- rep(\u0026#34;\u0026#34;, length(passage1)) # vector to store the generated text.\n  for (i in 1:length(passage1)) { # iterate through each line \n    for (j in 1:nchar(passage1[[i]])) { # iterate through each character\n      test_char \u0026lt;- monkey_the_author(passage1) # monkey hits\n      # for each character, the loop generates random strings until a character that matches the corresponding character in the target text is found.\n      while (test_char != substr(passage1[[i]], j, j)) { # it uses the substr function to extract the character from the target text and compare it to the generated character.\n        test_char \u0026lt;- monkey_the_author(passage1) # if the generated character does not match the target character, the loop generates another random string and continues until a match is found\n        count \u0026lt;- count + 1 # to keep track of the number of attempts required\n      }\n      test_passage[i] \u0026lt;- paste0(test_passage[i], test_char) # Once a match is found, the loop concatenates the matched character to the current line\n    }\n  }\n  if (identical(test_passage, passage1)) { # If the entire test_passage vector matches the passage vector\n    break # the loop breaks\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eExperiment is over. Now, let us check whether the entire test_passage matches the original passage.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003etest_passage\n\n## [1] \u0026#34;monkey\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow, let us see how many attempts required to generate the target passage. test_passage\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecat(\u0026#34;It took\u0026#34;, count, \u0026#34;attempts to generate the target passage.\u0026#34;)\n\n## It took 148 attempts to generate the target passage.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEven though we succeeded with a low number of attempts, 148, what was the probability that a monkey pressing random keys would type this word correctly?\u003c/p\u003e\n\u003cp\u003eThe word \u0026ldquo;monkey\u0026rdquo; has 6 letters. At first, we need to determine the total number of possible ways to draw 6 letters from the 26 letters of the alphabet with replacement. Since we are drawing with replacement, each letter can be drawn more than once, so the number of ways to draw 6 letters from 26 with replacement is:\u003c/p\u003e\n\u003cp\u003e26⁶ = 26 x 26 x 26 x 26 x 26 x 26 = 308,915,776\u003c/p\u003e\n\u003cp\u003eThis means there are 308,915,776 possible 6-letter combinations that can be drawn with replacement from the alphabet.\u003c/p\u003e\n\u003cp\u003eTo calculate the probability of spelling \u0026ldquo;monkey\u0026rdquo;, we need to determine how many of these 6-letter combinations contain the letters \u0026ldquo;m\u0026rdquo;, \u0026ldquo;o\u0026rdquo;, \u0026ldquo;n\u0026rdquo;, \u0026ldquo;k\u0026rdquo;, \u0026ldquo;e\u0026rdquo;, and \u0026ldquo;y\u0026rdquo; in the correct order. Since each letter can be drawn with replacement, the probability of drawing any particular letter is 1/26.\u003c/p\u003e\n\u003cp\u003eTo calculate the probability of drawing all 6 letters in the correct order, we simply multiply the probability of drawing each letter:\u003c/p\u003e\n\u003cp\u003e(1/26) x (1/26) x (1/26) x (1/26) x (1/26) x (1/26) = 1/308,915,776\u003c/p\u003e\n\u003cp\u003eSo the probability of spelling \u0026ldquo;monkey\u0026rdquo; by randomly drawing 6 letters from the alphabet with replacement is approximately 1 in 308,915,776 or 0.000000324%. This is amazing!\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eNow, let me repeat the experiment with a more complicated passage which is \u0026ldquo;monkey wrote this passage\u0026rdquo;. I run the code again by repeating the steps I did for the word \u0026ldquo;monkey\u0026rdquo;.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003epassage2 \u0026lt;- (\u0026#34;monkey wrote this passage\u0026#34;)\n\n# again, the same processes\n\ncount2 \u0026lt;- 0\nset.seed(122)\nrepeat {\n  count2 \u0026lt;- count2 + 1\n  test_passage2 \u0026lt;- rep(\u0026#34;\u0026#34;, length(passage2))\n  for (i in 1:length(passage2)) {\n    for (j in 1:nchar(passage2[[i]])) {\n      test_char2 \u0026lt;- monkey_the_author(passage2)\n      while (test_char2 != substr(passage2[[i]], j, j)) {\n        test_char2 \u0026lt;- monkey_the_author(passage2)\n        count2 \u0026lt;- count2 + 1\n      }\n      test_passage2[i] \u0026lt;- paste0(test_passage2[i], test_char2)\n    }\n  }\n  if (identical(test_passage2, passage2)) {\n    break\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eLet us check whether the entire test_passage matches the original passage.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003etest_passage2\n\n## [1] \u0026#34;monkey wrote this passage\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eLet us see how many attempts required to generate the target passage\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecat(\u0026#34;It took\u0026#34;, count2, \u0026#34;attempts to generate the target passage.\u0026#34;)\n\n## It took 744 attempts to generate the target passage.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAgain, even though we succeeded with a relatively low number of attempts, 744, what was the probability that a monkey pressing random keys would type this word correctly?\u003c/p\u003e\n\u003cp\u003eThe sentence \u0026ldquo;monkey wrote this passage\u0026rdquo; has 23 letters. Thus, firstly, we first need to determine the total number of possible ways to draw 23 letters from the 26 letters of the alphabet with replacement. Since we are drawing with replacement, each letter can be drawn more than once, so the number of ways to draw 23 letters from 26 with replacement is:\u003c/p\u003e\n\u003cp\u003e26²³ = 351,843,720,888,320,000,000,000,000\u003c/p\u003e\n\u003cp\u003eThis means there are 351,843,720,888,320,000,000,000,000 possible 23-letter combinations that can be drawn with replacement from the alphabet.\u003c/p\u003e\n\u003cp\u003eTo calculate the probability of spelling \u0026ldquo;monkey wrote this passage\u0026rdquo;, we need to determine how many of these 23-letter combinations contain the letters in the correct order. Since each letter can be drawn with replacement, the probability of drawing any particular letter is 1/26.\u003c/p\u003e\n\u003cp\u003eTo calculate the probability of drawing all 23 letters in the correct order, we simply multiply the probability of drawing each letter:\u003c/p\u003e\n\u003cp\u003e(1/26)²³ = 1/817,0728068870529046\u0026hellip; × 10²³\u003c/p\u003e\n\u003cp\u003eSo the probability of spelling \u0026ldquo;monkey wrote this passage\u0026rdquo; by randomly drawing 23 letters from the alphabet with replacement(hang on to your hat!) is approximately 1 in 8.170728068870529046\u0026hellip; × 10²³ or 0.0000000000000000000000000000000000000000865% !!!!!\u003c/p\u003e\n\u003cp\u003eNot surprisingly, As the number of words in the passage that the monkeys are asked to write increases, the number of iterations in the loop, i.e. the number of attemps required, will also increase. This inevitable relationship is actually the basis of the theorem. Aside from the astonishment of realizing such low probabilities, however, it is also possible to interpret this theorem from another perspective. For example, it took 148 attempts for monkeys to type the word \u003ccode\u003emonkey\u003c/code\u003e by pressing random keys. What would happen if I used a for loop instead of repeat and iterated the loop 147 times?\u003c/p\u003e\n\u003cp\u003eYes, sometimes a certain number of iterations will be enough to achieve the goal. But the thing to never forget is the real key to success: keep going until the condition is met! \u003ccode\u003eRepeat\u003c/code\u003edoing what you need to do to get what you want, until you get what you want! If you are struggling to achieve something you want to achieve and you can\u0026rsquo;t get it even after countless attempts, you either don\u0026rsquo;t have enough time or you don\u0026rsquo;t have enough resources. Keep trying, get the resources you need (try a \u003ccode\u003erepeat\u003c/code\u003eloop instead of a \u003ccode\u003efor\u003c/code\u003eloop), and eventually you will succeed!\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you have enough time and resources, you can perform an event with a probability of 0.0000000000000000000000000000000000000000000000000000000000000000865%.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eLet\u0026rsquo;s end this project with the output of the code whose input I have hidden. Let\u0026rsquo;s see what the monkey wrote for us[3] this time.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e## i am the master of my fate \n##  i am the captain of my soul\n\u003c/code\u003e\u003c/pre\u003e\u003chr\u003e\n\u003cp\u003e\u003cstrong\u003eReadings\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e[1] Crowley, John. \u0026ldquo;The Million Monkeys of M. Borel.\u0026rdquo; Conjunctions 67 (2016): 57\u0026ndash;60.\u003c/p\u003e\n\u003cp\u003e[2] \u003ca href=\"https://yourlogicalfallacyis.com/the-gamblers-fallacy\"\u003ehttps://yourlogicalfallacyis.com/the-gamblers-fallacy\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e[3] \u003ca href=\"https://www.poetryfoundation.org/poems/51642/invictus\"\u003ehttps://www.poetryfoundation.org/poems/51642/invictus\u003c/a\u003e\u003c/p\u003e\n","description":null,"image":null,"permalink":"https://hugo-profile.netlify.app/blogs/infmonkey/","title":"Infinite Monkey"}]